#!/usr/bin/env bash

# stop the script if anything fails
set -e

START_TIME=`date +%s`
CWD=`dirname $0`

./node_modules/.bin/ganache-cli -i 999 -p 2000 -a 1000 -m "hill law jazz limb penalty escape public dish stand bracket blue jar" >./ganache.out 2>&1 & netpid=$!
trap "kill $netpid" EXIT

# Wait until it's up, then use it for the deployment.
echo "Waiting for ganache-cli to start up..."
export ETH_RPC_URL=http://127.1:2000
until curl -s -o/dev/null "$ETH_RPC_URL"; do sleep 3; done

# Configure seth
export SOLC_FLAGS=${SOLC_FLAGS:-"--optimize"}
export ETH_GAS=${ETH_GAS:-"4500000"}
export ETH_FROM=${ETH_FROM:-$(seth rpc eth_coinbase)}
export SETH_STATUS=yes
export ETH_RPC_ACCOUNTS=yes # Don't use ethsign

cd src/ds-chief; dapp update; dapp build; 

export SETH_ASYNC=yes
test -z $GOV && GOVtx=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii 'GOV')))
test -z $IOU && IOUtx=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii 'IOU')))
export SETH_ASYNC=no
test -z $GOV && GOV=$(seth receipt $GOVtx contractAddress)
test -z $IOU && IOU=$(seth receipt $IOUtx contractAddress)

MAX_YAYS=5

CHIEF=$(dapp create DSChief $GOV $IOU $MAX_YAYS) 

cd ../vote-proxy; dapp update; dapp build; 
PROXY_FACTORY=$(dapp create VoteProxyFactory $CHIEF) 

cd ../..

# Save the contract addresses to a JSON file
cat > ./addresses.json <<- EOM
{
  "GOV": "$GOV",
  "IOU": "$IOU",
  "CHIEF": "$CHIEF",
  "PROXY_FACTORY": "$PROXY_FACTORY"
}
EOM

echo "Press Ctrl-C to kill the testnet"
    while [ "$key" != "\n" ]; do
read
done